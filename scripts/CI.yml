trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
- group: BuildVariables

jobs:
- job: Build
  variables:
    build.clean: all
    platform: x64
    version: 'current'
    appVersion: '16.0'
    appBuild: $(Build.BuildID)
    appRevision: 0
    createRuntimePackages: True
    skipComponentGovernanceDetection: True

  steps:
  - task: PowerShell@2
    displayName: 'Set BuildNumber'
    inputs:
      targetType: inline
      script: 'Write-Host "##vso[build.updatebuildnumber]$(appVersion).$(appBuild).$(appRevision)"'

  - task: PowerShell@2
    displayName: 'Install BcContainerHelper'
    inputs:
      targetType: filePath
      filePath: 'scripts\Install-BcContainerHelper.ps1'
      failOnStderr: true

  - task: PowerShell@2
    displayName: 'Run Pipeline'
    env:
      InsiderSasToken: '$(InsiderSasToken)'
      LicenseFile: '$(LicenseFile)'
      CodeSignCertPfxFile: '$(CodeSignCertPfxFile)'
      CodeSignCertPfxPassword: '$(CodeSignCertPfxPassword)'
    inputs:
      targetType: filePath
      filePath: 'scripts\DevOps-Pipeline.ps1'
      arguments: '-version "$(version)" -appBuild $(appBuild) -appRevision $(appRevision)'
      failOnStderr: true

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    condition: and(succeeded(),eq(variables['TestResultsAvailable'],'True'))
    inputs:
      testResultsFormat: XUnit
      testResultsFiles: TestResults.xml
      failTaskOnFailedTests: true
  
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: output

  - task: PowerShell@2
    displayName: 'Cleanup'
    condition: always()
    inputs:
      targetType: inline
      script: 'Remove-BcContainer -containerName $(containerName); Flush-ContainerHelperCache -KeepDays 7'
      failOnStderr: false
